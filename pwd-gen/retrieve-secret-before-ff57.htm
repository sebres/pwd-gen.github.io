<html>
<head>
  <title>Restore secret phrase of Persistent Password Generator</title>
<script>
(function _init() {

function _b64toba(val) { 
  return new Uint8Array(atob(val).split("").map(function(c) {return c.charCodeAt(0); }));
}
  var ext = {};
  ext.secrets = {
    tenc: new TextEncoder(),
    tdec: new TextDecoder(),
    _init: function(hmiv) {
      var loc = 'chrome://pwd-gen/content/pwd-gen.html';
      var hmiv = hmiv + "/.../" + loc;
      hmiv = ext.secrets.tenc.encode(hmiv);
      var secretsPromise;
      var seckey = ext.secrets.unique;
      if (seckey) {
        seckey = _b64toba(seckey);
        secretsPromise = crypto.subtle.importKey('raw', seckey, { name: "HMAC", hash: {name: "SHA-256"}}, false, ["sign"] );
      }
      secretsPromise = secretsPromise.then(function(key) {
        return crypto.subtle.sign({name: "HMAC"}, key, hmiv);
      }).then(function(signature) {
        var key = new Uint8Array(signature.slice(-32));
        return crypto.subtle.importKey('raw', key, { name: "AES-CBC", length: 256 }, false, ["encrypt", "decrypt"] );
      }).then(function(key) {
        ext.secrets.aesKey = key;
      }).catch(function(err) { console.error(err); });
  
      ext.secretsPromise = secretsPromise;
    },
    decrypt: function (val, then) {
      val = val.split(".");
      var iv = _b64toba(val[1]);
      val = _b64toba(val[0]);
      return ext.secretsPromise.then(function() {
        return crypto.subtle.decrypt( {name: "AES-CBC", iv: iv}, 
          ext.secrets.aesKey, val );
      }).then(function(data) {
        return ext.secrets.tdec.decode(new Uint8Array(data));
      }).then(then).catch(function(err) {console.error(err);});
    }
  }

  function _convertOldData(s, u, p) {
    ext.secrets.unique = u;
    ext.secrets._init(p);
    return ext.secrets.decrypt(s);
  }

  window.convertOldData = function(s, u, p) {
    var _e = function(id) {return window.document.getElementById(id)};
    var s = _e('s').value;
    var u = _e('u').value;
    var p = _e('p').value;
    var elm = _e('secret');
    elm.value = '';
    if (!s.length && !u.length && !p.length) return;
    function _get_msg() {
      if (s.length && u.length && p.length) {
        return "ERROR: can't retrieve secret - please check your data";
      }
      return "";
    }
    p = ('/'+p).match(/[^\\\/]+$/)[0];
    _convertOldData(s, u, p).then(function(v) {
      if (v == null) {
        v = _get_msg();
      }
      elm.value = v;
    }).catch(function() {
      var v = _get_msg();
      elm.value = v;
    });
  };
})();

</script>

</head>
<body onload="convertOldData()">
  Because new firefox (Quantum, since v. 57) does not provide an API for preferences anymore,<br/>
  the converting of saved data cannot occur automatically. See <a href="https://blog.mozilla.org/addons/2017/09/08/last-chance-migrate-user-data/">last-chance-migrate-user-data</a> for more info...<br/>
  <br/>
  This may help you, if you've forget the secret phrase (saved in your profile preferences).
  Either you can downgrade your firefox to v. 56 to access in within "Password generator".<br/>
  Or try to retrieve it as decribed below:</br></br>
  To retrieve your saved secret phrase manually you should enter 3 values:<br/>
  &nbsp;&nbsp;- two values from "<a href="about:config?filter=extensions.pwd-gen" target="_new">about:config?filter=extensions.pwd-gen</a>"</br>
  &nbsp;&nbsp;&nbsp;&nbsp;(Copy this link, open it in new tab and copy both values using "Rigth Click / Copy Value").<br/>
  &nbsp;&nbsp;- one value that correspond your profile-name or path (take a look in your file system under "%APPDATA%\Mozilla\Firefox\Profiles").
  <br/><br/>
  <table>
    <tr> <td colspan="2"><b>Values from about:config</b></td> </tr>
    <tr> <td>&nbsp;&nbsp;extensions.pwd-gen-sebres-de.<b>dlg_Secret</b>:</td><td><input type="text" id="s" value="" onchange="convertOldData();" onkeyup="convertOldData();" size="100"/></td> </tr>
    <tr> <td>&nbsp;&nbsp;extensions.pwd-gen-sebres-de.<b>unique</b>:</td><td><input type="text" id="u" value="" onchange="convertOldData();"/ onkeyup="convertOldData();" size="100"></td> </tr>
    <tr> <td colspan="2"><b>Profile-name (path):</b></td> </tr>
    <tr> <td>&nbsp;&nbsp;Profile:</td><td><input type="text" id="p" value="" onchange="convertOldData();" onkeyup="convertOldData();" size="50"/>
      <input type="button" value=" Convert " onclick="convertOldData();"/></td> </tr>
    <tr> <td colspan="2">
      <br/>
      <hr/>
      Secret-Phrase: <input type="text" id="secret" value="" readonly="true" size="50"/>
      <br/>
      <hr/>
    </td> </tr>
  </table>
  After you've successfull retrieved your secret phrase you can delete both values in "about:config".
</body>
</html>
